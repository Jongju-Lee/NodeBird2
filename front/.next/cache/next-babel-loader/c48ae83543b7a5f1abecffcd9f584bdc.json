{"ast":null,"code":"import { all, fork, takeLatest, delay, put } from \"redux-saga/effects\";\nimport axios from \"axios\";\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\", data);\n}\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: \"LOG_IN_SUCCESS\",\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_IN_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: \"LOG_OUT_SUCCESS\"\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_OUT_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\nfunction* watchLogIn() {\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\n}\nfunction* watchLogOut() {\n  yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\n}\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"names":["all","fork","takeLatest","delay","put","axios","logInAPI","data","post","logIn","action","type","err","response","logOutAPI","logOut","watchLogIn","watchLogOut","userSaga"],"sources":["C:/web/MyPortfolio/nodebird2/front/sagas/user.js"],"sourcesContent":["import { all, fork, takeLatest, delay, put } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post(\"/api/login\", data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    // const result = yield call(logInAPI, action.data);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: \"LOG_IN_SUCCESS\",\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: \"LOG_IN_FAILURE\",\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logOutAPI() {\r\n  return axios.post(\"/api/logout\");\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    // const result = yield call(logOutAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: \"LOG_OUT_SUCCESS\",\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: \"LOG_OUT_FAILURE\",\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\r\n}\r\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,UAAU,EAAEC,KAAK,EAAEC,GAAG,QAAQ,oBAAoB;AACtE,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,QAAQA,CAACC,IAAI,EAAE;EACtB,OAAOF,KAAK,CAACG,IAAI,CAAC,YAAY,EAAED,IAAI,CAAC;AACvC;AAEA,UAAUE,KAAKA,CAACC,MAAM,EAAE;EACtB,IAAI;IACF;IACA,MAAMP,KAAK,CAAC,IAAI,CAAC;IACjB,MAAMC,GAAG,CAAC;MACRO,IAAI,EAAE,gBAAgB;MACtBJ,IAAI,EAAEG,MAAM,CAACH;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOK,GAAG,EAAE;IACZ,MAAMR,GAAG,CAAC;MACRO,IAAI,EAAE,gBAAgB;MACtBJ,IAAI,EAAEK,GAAG,CAACC,QAAQ,CAACN;IACrB,CAAC,CAAC;EACJ;AACF;AAEA,SAASO,SAASA,CAAA,EAAG;EACnB,OAAOT,KAAK,CAACG,IAAI,CAAC,aAAa,CAAC;AAClC;AAEA,UAAUO,MAAMA,CAAA,EAAG;EACjB,IAAI;IACF;IACA,MAAMZ,KAAK,CAAC,IAAI,CAAC;IACjB,MAAMC,GAAG,CAAC;MACRO,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,MAAMR,GAAG,CAAC;MACRO,IAAI,EAAE,iBAAiB;MACvBJ,IAAI,EAAEK,GAAG,CAACC,QAAQ,CAACN;IACrB,CAAC,CAAC;EACJ;AACF;AAEA,UAAUS,UAAUA,CAAA,EAAG;EACrB,MAAMd,UAAU,CAAC,gBAAgB,EAAEO,KAAK,CAAC;AAC3C;AAEA,UAAUQ,WAAWA,CAAA,EAAG;EACtB,MAAMf,UAAU,CAAC,iBAAiB,EAAEa,MAAM,CAAC;AAC7C;AAEA,eAAe,UAAUG,QAAQA,CAAA,EAAG;EAClC,MAAMlB,GAAG,CAAC,CAACC,IAAI,CAACe,UAAU,CAAC,EAAEf,IAAI,CAACgB,WAAW,CAAC,CAAC,CAAC;AAClD"},"metadata":{},"sourceType":"module"}